<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="41" failures="0" name="org.nutz.lang.MirrorTest" time="0.013" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.292-b10"/>
    <property name="java.vm.vendor" value="Private Build"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/suvarna/Vinay/Sept-2021/nutz-1b757e31ea90ceea7f80efa6d7a89863ce98cbf1"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="IN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/suvarna/Vinay/Sept-2021/nutz-1b757e31ea90ceea7f80efa6d7a89863ce98cbf1"/>
    <property name="java.runtime.version" value="1.8.0_292-8u292-b10-0ubuntu1~16.04.1-b10"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/home/suvarna/maven/apache-maven-3.6.3/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="maven.conf" value="/home/suvarna/maven/apache-maven-3.6.3/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.15.0-142-generic"/>
    <property name="library.jansi.path" value="/home/suvarna/maven/apache-maven-3.6.3/lib/jansi-native"/>
    <property name="user.home" value="/home/suvarna"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="suvarna"/>
    <property name="java.class.path" value="/home/suvarna/maven/apache-maven-3.6.3/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_292"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Private Build"/>
    <property name="maven.home" value="/home/suvarna/maven/apache-maven-3.6.3"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_getFields" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_duplicate_method_for_getAllDeclareMethods" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testOneParam" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_invoke_map" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testTwoParam" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testWrapper" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testCanCastToDirectly" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testGetWrpperClass" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testExtractBoolean" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testExtractEnum" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testExtractChar" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testExtractInt" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testExtractString" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_get_fields" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBorn_innerClassNested" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBorn_innerClassDefaultNested" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByStaticDynamiceArgs" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByStaticNullDynamiceArgs" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByInnerDynamiceArgs" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByInnerNullDynamiceArgs" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByInnerOuterDynamiceArgs" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByParent" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByStatic" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByDynamicArgs" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testInvokeByDynamicArgs" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByDynamicArgsNull" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornByDynamicArgsObjectArray" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testBornEmail" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testInvokeStatic" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testInvoke" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testInvokeByWrapper" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_setValue" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_setValue_Boolean_and_Character" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="set_null_value_by_invoking" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_getGenericTypes" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_borning_of_constractor" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_borning_of_method" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_packageClass" time="0.002"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="test_evalGetterSetter" time="0.001"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testIssue309" time="0"/>
  <testcase classname="org.nutz.lang.MirrorTest" name="testIssue392" time="0"/>
</testsuite>